mkdir skol
cd skol

# Créer les dossiers principaux
mkdir backend web mobile docs deployment

cd backend

# Installer Laravel
composer create-project laravel/laravel . --prefer-dist

# Packages nécessaires
composer require spatie/laravel-permission
composer require tymon/jwt-auth
composer require spatie/laravel-query-builder
composer require league/flysystem-aws-s3-v3
composer require pusher/pusher-php-server
composer require laravel/sanctum

# Créer la structure modulaire
mkdir -p app/Modules/{Core,Academic,Grading,Attendance,Payment,Messaging,Schedule,Document,Discipline,Analytics}

# Créer les dossiers de services
mkdir -p app/Services/{Core,Academic,Grading,Attendance,Payment,Messaging,Schedule,Document,Discipline,Analytics}

# Créer les dossiers de repositories
mkdir -p app/Repositories

# Structure des contrôleurs API
mkdir -p app/Http/Controllers/Api/V1/{Auth,Core,Academic,Grading,Attendance,Payment,Messaging,Schedule,Document,Discipline,Analytics}
mkdir -p app/Http/Controllers/Admin

# Middleware personnalisés
mkdir -p app/Http/Middleware

# Requests et Resources
mkdir -p app/Http/Requests/{Core,Academic,Grading,Attendance,Payment,Messaging,Schedule,Document,Discipline,Analytics}
mkdir -p app/Http/Resources/{Core,Academic,Grading,Attendance,Payment,Messaging,Schedule,Document,Discipline,Analytics}

# Traits
mkdir -p app/Traits

# Structure des migrations par module
mkdir -p database/migrations/{core,academic,grading,attendance,payment,messaging,schedule,document,discipline,saas}

# Routes modulaires
mkdir -p routes/modules

# Configuration
mkdir -p config

# Modèles principaux
touch app/Models/{User,School,SchoolLevel,SchoolYear,Term,Classroom,Room,Teacher,Student,Parent,Module,Subject,Schedule,Grade,Payment,Attendance,Document,Discipline,Message}.php
touch app/Models/{SubscriptionPlan,SchoolSubscription,SchoolModule,PlanModule}.php

# Services principaux
touch app/Services/Core/{AuthService,SchoolService,UserService,SubscriptionService}.php
touch app/Services/Academic/{StudentService,TeacherService,ClassroomService,SubjectService}.php
touch app/Services/Grading/{GradeService,ReportService,BulletinService}.php
touch app/Services/Attendance/AttendanceService.php
touch app/Services/Payment/{PaymentService,WaveGateway,OrangeMoneyGateway}.php
touch app/Services/Messaging/MessageService.php
touch app/Services/Schedule/ScheduleService.php
touch app/Services/Document/DocumentService.php
touch app/Services/Discipline/DisciplineService.php
touch app/Services/Analytics/AnalyticsService.php

# Middleware
touch app/Http/Middleware/{ModuleAccessMiddleware,TenantScopeMiddleware,RolePermissionMiddleware}.php

# Traits
touch app/Traits/{BelongsToSchool,HasModules,HasSubscription}.php

# Configuration
touch config/{modules,subscription,permissions}.php

# Routes
touch routes/modules/{core,academic,grading,attendance,payment,messaging,schedule,document,discipline,analytics}.php

cd ../web

# Créer le projet Next.js
npx create-next-app@latest . --typescript --tailwind --eslint --app --src-dir --import-alias "@/*"

# Packages nécessaires
npm install axios
npm install @tanstack/react-query
npm install zustand
npm install react-hook-form
npm install @hookform/resolvers
npm install zod
npm install lucide-react
npm install @radix-ui/react-dialog
npm install @radix-ui/react-dropdown-menu
npm install @radix-ui/react-select
npm install recharts
npm install date-fns
npm install clsx
npm install tailwind-merge

# Créer la structure des composants
mkdir -p src/components/{shared,core,academic,grading,attendance,payment,messaging,schedule,document,discipline,analytics}
mkdir -p src/components/shared/{Layout,Forms,Tables,Charts,UI}

# Pages par module
mkdir -p src/app/{auth,dashboard,students,teachers,grades,attendance,payments,messages,schedule,documents,discipline,reports,settings}
mkdir -p src/app/dashboard/{super-admin,admin-ecole,enseignant,parent,eleve}

# Services et utilitaires
mkdir -p src/services/modules
mkdir -p src/stores
mkdir -p src/utils
mkdir -p src/types
mkdir -p src/hooks

# Assets
mkdir -p public/{images,icons,documents}

# Services API
touch src/services/{api,auth,subscription}.ts
touch src/services/modules/{core,academic,grading,attendance,payment,messaging,schedule,document,discipline,analytics}.ts

# Stores
touch src/stores/{auth,school,modules,subscription}.ts

# Utilitaires
touch src/utils/{permissions,moduleChecker,formatters,validators}.ts

# Types
touch src/types/{user,school,student,teacher,grade,attendance,payment,message,schedule,document,discipline}.ts

# Hooks personnalisés
touch src/hooks/{useAuth,useModules,usePermissions,useSubscription}.ts

# Composants de base
touch src/components/shared/Layout/{AppLayout,AuthLayout,DashboardLayout}.tsx
touch src/components/shared/Forms/{LoginForm,StudentForm,GradeForm}.tsx
touch src/components/shared/Tables/{StudentsTable,GradesTable,AttendanceTable}.tsx
touch src/components/shared/Charts/{GradeChart,AttendanceChart,PaymentChart}.tsx

cd mobile

# Installer Expo CLI globalement
npm install -g @expo/cli

# Créer le projet Expo avec TypeScript
npx create-expo-app SkolApp --template blank-typescript

cd SkolApp

# Navigation
npx expo install @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs
npx expo install react-native-screens react-native-safe-area-context

# État et API
npm install axios @tanstack/react-query zustand

# Formulaires et UI
npm install react-hook-form @hookform/resolvers zod
npx expo install expo-linear-gradient
npx expo install @expo/vector-icons

# Fonctionnalités natives
npx expo install expo-secure-store        # Stockage sécurisé
npx expo install expo-notifications       # Notifications push
npx expo install expo-document-picker     # Sélection documents
npx expo install expo-image-picker        # Sélection images
npx expo install expo-file-system         # Gestion fichiers
npx expo install expo-sharing            # Partage fichiers
npx expo install expo-print              # Impression/PDF
npx expo install expo-camera             # Appareil photo
npx expo install expo-barcode-scanner    # Scanner QR codes
npx expo install expo-location           # Géolocalisation
npx expo install expo-contacts           # Contacts
npx expo install expo-calendar           # Calendrier
npx expo install expo-web-browser        # Navigateur intégré

# Offline et synchronisation
npx expo install @react-native-async-storage/async-storage
npx expo install expo-network            # État réseau
npx expo install expo-sqlite             # Base locale

# Réorganiser avec la structure Expo
mkdir -p src/{components,screens,navigation,services,stores,utils,hooks,types,constants}

# Composants par module
mkdir -p src/components/{shared,core,academic,grading,attendance,payment,messaging,schedule,document,discipline,analytics}
mkdir -p src/components/shared/{Layout,Forms,Lists,Cards,UI,Modals}

# Écrans par rôle et fonctionnalité
mkdir -p src/screens/{auth,dashboard,academic,grading,attendance,payment,messaging,schedule,document,profile,settings}
mkdir -p src/screens/dashboard/{admin,teacher,parent,student}

# Navigation par rôle
mkdir -p src/navigation/{stacks,tabs}

# Services (même API que web)
mkdir -p src/services/{api,modules,offline}

# Stores avec persistance
mkdir -p src/stores

# Utilitaires Expo
mkdir -p src/utils/{storage,notifications,permissions,offline,camera,documents}

# Constants et thèmes
mkdir -p src/constants
mkdir -p src/themes

# Assets Expo
mkdir -p assets/{images,icons,fonts,splash}